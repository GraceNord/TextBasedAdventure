from __future__ import print_function
import random

playerItems = []
enteredRooms = []
openedDoors = []
likability = False

def cellB():
    global enteredRooms
    print('You entered Room 2')
    if 'room2' in enteredRooms:
        print('This room looks vaguely familiar')
    if 'room2' not in enteredRooms:
        enteredRooms += ['room2']

def hallwayA():
	print("This is a hallway, illuminated with dim lights. This is a pretty long hallway, with a lot of cobwebs. Suddenly a spider drops down in front of your legs.")
	spiderAction = ("What do you want to do?\n")
    
def cellC():
    global enteredRooms
    print('You entered Room 3')
    if 'room3' in enteredRooms:
        print('This room looks vaguely familiar')
    if 'room3' not in enteredRooms:
            enteredRooms += ['room3']    

def yourCell():
    global playerItems
    global enteredRooms
    global openedDoors
    exitRoom = False
    cellItems = ['pillow','pillowcase']
    print('Your hands shake as you pace around your cramped cell')
    print('The cell bars are tight and close, but they look weak.')
    while exitRoom == False:
        userAction = raw_input('What would you like to do? ')
        if userAction == 'slide through bars' and 'bar' in playerItems:
            print('You slip through the bars, holding the bar.')
            openedDoors += ['yourCell']
            exitRoom = True
        elif userAction == 'pick up pillow':
            print('You picked up the pillow')
            playerItems += ['pillow']
            exitRoom = False
            userAction = raw_input('What would you like to do now? ')
        else:
            userAction = raw_input('Not a valid action.  Try Again! ')
    if 'yourCell' in openedDoors:
        hallA()   
	
def hallB():
    global playerItems
    global enteredRooms
    global openedDoors
    global enteredRooms += [hallB]
    
    print('The hall is dark and musty, lit by a single torch on the stone walls.)
    print('There are 3 doors, one on the right (door 1), one on the left (door 2), and one directly in behind you (door 3).')
    print('Their is a door directly in front of you that is guarded by a tall, dark man in leather armor.')
    action = raw_input('Would you like to confront the guard? (yes or no)')
    
    if action == 'yes':
    	print('As you approach the guard, he turns to face you.')
        print('He lifts his hood and stands up straight to confront you.')
	choice = raw_input('What are you doing out of your cell?(looking to barter or looking to fight)')
	
	while choice == 'looking to barter':
		print('The guard takes a step towards you.')
		barter = raw_input('I'm listening.  Go on, what do you have for me.(str(user_items))')
		if barter == 'gold' or barter == 'pillow':
			print('You think I want some old' + barter + '?')
			response = ('The guard reaches for his sword. You must now fight or surrender.')
			
			if response == 'surrender':
				print('You surrender yourself to the guard.')
				print('He yells for other guards. You have failed.')	
			if response == 'fight':
				choice = 'looking to fight'
				
		if barter == 'spider' or barter == 'bar':
			print('You have made a very intriguing case.')
			print('I challenge you to a duel. If you win, I will let you go free.')
			print('If I win, I call the other guards.')
			choice = 'looking to fight'
			
	while choice == 'looking to fight':
		print('Your hands sweat as you think of what you should use to defend yourself.')
		weapon = raw_input('What do you use to defend yourself?: )
		if weapon == 'cloroform' and 'cloroform' in userItems and 'rope' in userItems:
			print('You knock the guard out with your rag and leave him tied up against the wall.')
			win()
		elif weapon == 'bar' and 'rope' not in userItems:
			print('You successfully strike the guard and drop the bar to the ground with a resounding clang.')
			print('Your hand is turning the door handle when your legs are knocked out from under you.')
			print('Your head is spinning as you look up and see the guard kneeling over you, calling out for help.')
			print('The other guards come quickly to his aid.')
			lose()
		elif weapon == 'bar' and 'rope' in userItems:
			print('You successfully strike the guard and drop the bar to the ground with a resounding clang.')
			print('You tie the guard up and leave him leaning against the stone wall')
			win()
			
	if action == 'no':
		move = raw_input('Which door would you like to enter?: ')
		if move == 'door 1':
			cellD()
		elif move == 'door 2':
			cellC()
		else move == 'door 3':
			hallA()
			
       
def cellD():
    global playerItems
    global enteredRooms
    global openedDoors
    global likability
    exitRoom = False
    cellItems = []
    
    if not("cD" in enteredRooms):
        enteredRooms += ["cD"]
        print("This cell is dark just like the rest of them. Before you stands to tall figure.")
        print("One to your left, the other to your right.")
        print("The one to your right barks, 'Hey what are you doing in here?'")
        print("How do you respond.")
        print(You are hiding from the guard or you are trying to escape the prison?")
        response = raw_input("Hide or Escape: ")
        while response != "Hide" and response != "Escape":
            response = raw_input("Invalid Option, Hide or Escape: ")
        if response == "Hide:
            likability = True
            print('The one to your left says, "We can sympathize with that. That guard has been a pain to everyone around here."')
        else:
            print('The one on your right scoffs, "Ha. Your trying to escape this prison, fat chance."')
            print('The one on your left chimes in, "Well, he has made it this far. Who is to say he cannot."')
            print('The one on your right says, "Maybe your right. Maybe he can do it. But will he take us with him?"')
            print('Will you try to free these prisoners?')
            response = raw_input('Yes or No: ')
            while response != "Yes" and response != "No":
                response = raw_input("Invalid Option, Yes or No: ")
            if response == "Yes":
                likability = True
                print('The one on your right shouts, "Alright, nice. Hey, any information you need, we both got it."')
            else:
                print('The one on your right menacingly says, "Wrong answer bub. You'll have to make it up to us now."')
                print('The one on your left says, "Why not leave that little pillow case we see you dragging around."')
                playerItems.remove("pillowcase")
                cellItems += ["pillowcase"]
                print("You don't think you can take a two on one fight. You drop your pillow case in the room.")
                print("Without it, you can only carry two items.")
                
    else:
       print("This is the cell with the two mysterious figures in it. It hasn't changed much since you left.")
       if likability == True
           print('The prisoner on your right says, "Hey it's good to see you again."')
           print('The prisoner on your left says, "What do you need?"')
       else:
           print('The prisoner on your right says, "You got a lotta nerve comming back here."')
           print('The prisoner on your left nods in agreement')
           
   if len(playerItems) > 2:
       if not("pillowcase" in playerItems):
           while len(playerItems) > 2:
               print("You currently cannot hold more than two items. Which one will you drop")
               for item in playerItems:
                   print(item)
               item = raw_input()
               while not(item in playerItems):
                   item = raw_input("Invalid object, try another: ")
               playerItems.remove(item)
               cellItems += [item]
               
def startGame():
    print('Welcome to Prison Break')
    raw_input('Press enter to start the game. ')
    yourCell()
    
def endGame():    '''find a way to actually implement this into every room'''
	print('You have ended the game.')
    
    
